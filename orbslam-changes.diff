diff --git a/CMakeLists.txt b/CMakeLists.txt
index 08a8af4..ae72014 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -111,3 +111,28 @@ add_executable(mono_euroc
 Examples/Monocular/mono_euroc.cc)
 target_link_libraries(mono_euroc ${PROJECT_NAME})
 
+# ---------------
+# Installation instructions.
+# Will install to CMAKE_INSTALL_PREFIX
+# This defaults to /usr/local/, specify -DCMAKE_INSTALL_PREFIX when calling cmake to specify an alternate location
+# e.g. cmake -DCMAKE_INSTALL_PREFIX="~/local"
+# ---------------
+
+install(TARGETS ${PROJECT_NAME}
+    DESTINATION  lib
+    COMPONENT library)
+install(FILES
+        ${PROJECT_SOURCE_DIR}/Thirdparty/DBoW2/lib/libDBoW2.so
+        ${PROJECT_SOURCE_DIR}/Thirdparty/g2o/lib/libg2o.so
+    DESTINATION lib
+    COMPONENT library)
+install(DIRECTORY ${PROJECT_SOURCE_DIR}/include/
+    DESTINATION include/ORB_SLAM2
+    COMPONENT library
+    FILES_MATCHING PATTERN "*.h"
+    PATTERN "Thirdparty" EXCLUDE)
+install(DIRECTORY ${PROJECT_SOURCE_DIR}/Thirdparty/
+    DESTINATION include/ORB_SLAM2/Thirdparty
+    COMPONENT library
+FILES_MATCHING REGEX ".*\\.h(pp)?")
+
diff --git a/include/System.h b/include/System.h
index b377b45..a564b19 100644
--- a/include/System.h
+++ b/include/System.h
@@ -119,6 +119,8 @@ public:
     // Information from most recent processed frame
     // You can call this right after TrackMonocular (or stereo or RGBD)
     int GetTrackingState();
+    vector<KeyFrame*> GetKeyFrames() const;
+    Tracking* GetTracker() const;
     std::vector<MapPoint*> GetTrackedMapPoints();
     std::vector<cv::KeyPoint> GetTrackedKeyPointsUn();
 
diff --git a/include/Tracking.h b/include/Tracking.h
index 5aaa93e..ab6550d 100644
--- a/include/Tracking.h
+++ b/include/Tracking.h
@@ -113,6 +113,9 @@ public:
     // True if local mapping is deactivated and we are performing only localization
     bool mbOnlyTracking;
 
+    // tag for when the inserted frame becomes a keyframe
+    bool didUpdateKeyFrame;
+
     void Reset();
 
 protected:
diff --git a/src/Frame.cc b/src/Frame.cc
index 0e37d49..0ba52ec 100644
--- a/src/Frame.cc
+++ b/src/Frame.cc
@@ -116,6 +116,7 @@ Frame::Frame(const cv::Mat &imLeft, const cv::Mat &imRight, const double &timeSt
     AssignFeaturesToGrid();
 }
 
+// RGBD
 Frame::Frame(const cv::Mat &imGray, const cv::Mat &imDepth, const double &timeStamp, ORBextractor* extractor,ORBVocabulary* voc, cv::Mat &K, cv::Mat &distCoef, const float &bf, const float &thDepth)
     :mpORBvocabulary(voc),mpORBextractorLeft(extractor),mpORBextractorRight(static_cast<ORBextractor*>(NULL)),
      mTimeStamp(timeStamp), mK(K.clone()),mDistCoef(distCoef.clone()), mbf(bf), mThDepth(thDepth)
@@ -170,7 +171,7 @@ Frame::Frame(const cv::Mat &imGray, const cv::Mat &imDepth, const double &timeSt
     AssignFeaturesToGrid();
 }
 
-
+// Monocular
 Frame::Frame(const cv::Mat &imGray, const double &timeStamp, ORBextractor* extractor,ORBVocabulary* voc, cv::Mat &K, cv::Mat &distCoef, const float &bf, const float &thDepth)
     :mpORBvocabulary(voc),mpORBextractorLeft(extractor),mpORBextractorRight(static_cast<ORBextractor*>(NULL)),
      mTimeStamp(timeStamp), mK(K.clone()),mDistCoef(distCoef.clone()), mbf(bf), mThDepth(thDepth)
diff --git a/src/System.cc b/src/System.cc
index 8df4157..f5e0c60 100644
--- a/src/System.cc
+++ b/src/System.cc
@@ -477,6 +477,16 @@ int System::GetTrackingState()
     return mTrackingState;
 }
 
+vector<KeyFrame*> System::GetKeyFrames() const
+{
+    return mpMap->GetAllKeyFrames();
+}
+
+Tracking* System::GetTracker() const
+{
+    return mpTracker;
+}
+
 vector<MapPoint*> System::GetTrackedMapPoints()
 {
     unique_lock<mutex> lock(mMutexState);
diff --git a/src/Tracking.cc b/src/Tracking.cc
index 2273b2c..277a9e9 100644
--- a/src/Tracking.cc
+++ b/src/Tracking.cc
@@ -237,6 +237,10 @@ cv::Mat Tracking::GrabImageRGBD(const cv::Mat &imRGB,const cv::Mat &imD, const d
 
 cv::Mat Tracking::GrabImageMonocular(const cv::Mat &im, const double &timestamp)
 {
+
+    //FIXME: Initialize tag when new frame is inserted
+    didUpdateKeyFrame = false;
+
     mImGray = im;
 
     if(mImGray.channels()==3)
@@ -417,7 +421,7 @@ void Tracking::Track()
         // Update drawer
         mpFrameDrawer->Update(this);
 
-        // If tracking were good, check if we insert a keyframe
+        // If tracking were good, check if we insert a keyframe (THIS POINT)
         if(bOK)
         {
             // Update motion model
@@ -454,6 +458,7 @@ void Tracking::Track()
             mlpTemporalPoints.clear();
 
             // Check if we need to insert a new keyframe
+            // HERE
             if(NeedNewKeyFrame())
                 CreateNewKeyFrame();
 
@@ -1138,6 +1143,8 @@ void Tracking::CreateNewKeyFrame()
 
     mnLastKeyFrameId = mCurrentFrame.mnId;
     mpLastKeyFrame = pKF;
+
+    didUpdateKeyFrame = true;
 }
 
 void Tracking::SearchLocalPoints()
